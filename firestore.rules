rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isValidQuiz(quiz) {
      return quiz.size() > 0 
        && quiz.courseName is string
        && quiz.modules is list
        && quiz.numberOfQuestions is number
        && quiz.createdAt is timestamp
        && (quiz.isArchived == null || quiz.isArchived is bool)
        && (quiz.archivedAt == null || quiz.archivedAt is timestamp);
    }

    function isValidSubmission(submission) {
      return submission.size() > 0
        && submission.userName is string
        && submission.timestamp is timestamp
        && submission.results is map;
    }

    function isQuizArchived(quizId) {
      return get(/databases/$(database)/documents/quizzes/$(quizId)).data.isArchived == true;
    }

    // Quizzes collection rules
    match /quizzes/{quizId} {
      // Allow reading quizzes
      allow read: if true;
      
      // Allow creating quizzes with validation
      allow create: if isValidQuiz(request.resource.data);
      
      // Allow updates with validation
      allow update: if isValidQuiz(request.resource.data);
      
      // Allow deletion only if quiz exists and is archived
      allow delete: if resource != null && resource.data.isArchived == true;

      // Submissions subcollection rules
      match /submissions/{submissionId} {
        // Allow reading submissions
        allow read: if true;
        
        // Allow creating submissions with validation
        allow create: if isValidSubmission(request.resource.data);
        
        // Allow deletion of submissions only if parent quiz is archived
        allow delete: if isQuizArchived(quizId);
        
        // Disallow updates
        allow update: if false;
      }
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 